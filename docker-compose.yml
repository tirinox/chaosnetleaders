version: '3.3'

volumes:
    db_data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - db
    volumes:
      - ./backend:/app
    restart: on-failure
    env_file: .env

  frontend:
    image: node:10-alpine
    command: npm run serve
    volumes:
      - ./.env:/app/.env:ro
      - ./frontend:/app
    working_dir: /app
    restart: on-failure

  db:
    image: mysql:5.7
    volumes:
      - ./db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    env_file: .env

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

#    logging:
#      driver: none

    # make sure nginx restarts every 6h
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

