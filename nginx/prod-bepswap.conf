user nginx;
worker_processes  2;


events {
  worker_connections  1024;
}


http {
  include /etc/nginx/mime.types;
  client_max_body_size 100m;

  upstream backend {
    server backend:5000;
  }

  # ---------------- HTTP/S REDIRECT -------------------

  server {
    listen 80;
    server_name thornode.org;

    location / {
        return 301 https://thorchain.org;
    }
  }

  server {
    listen 443 ssl;
    server_name thornode.org;

    ssl_certificate     /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;

    location / {
        return 301 https://thorchain.org;
    }

    charset utf-8;
  }

  # ---------------- HTTP LEADERBOARD -------------------

  server {
    listen 80;
    server_name leaderboard-bepswap.thornode.org;

    location / {
        return 301 https://$host$request_uri;
    }
  }

  # ---------------- HTTPS LEADERBOARD -------------------

  server {
    listen 443 ssl;
    server_name leaderboard-bepswap.thornode.org;

    ssl_certificate     /etc/letsencrypt/leaderboard.thornode.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/leaderboard.thornode.org/privkey.pem;

    charset utf-8;

    root /dist/;
    index index.html;

    # frontend
    location / {
      try_files $uri $uri/ @rewrites;
      add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html last;
    }

    # backend urls
    location ~ ^/(admin|api) {
      proxy_redirect off;
      proxy_pass http://backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
    }

    # backend static
    location ~ ^/(staticfiles|media)/(.*)$ {
      alias /$1/$2;
    }

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
      expires 24h;
      add_header Pragma public;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";

    }
  }
}
